1. When would you want to use a remote repository rather than keeping all your
work local?

It's nice to have a remote repository because then you can access these files
from anywhere. If you keep all your work local then you need to access that
specific laptop or computer at all times to edit the work.


--------------------------------------------------------------------------------
2. Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

It's better to manually pull changes so that you can control what changes you
pull to your local repository. For instance if the files in the remote have a
but that still hasn't been fixed, you wouldn't want to pull it onto your local
repo until you've fixed the error.


--------------------------------------------------------------------------------
3. Describe the differences between forks, clones, and branches. When would you
use one instead of another?

Branches are contained within a single repository. They occur when one commit
leads to two seperate commits that have both edited that original commit. Clones
are identical repositories that exist individually. Repositories can be cloned
from GitHub to a local repository or within just a local repository but not from
a local repository to GitHub or from one GitHub repository to another GitHub
repository. Forks are used when you want to clone a GitHub repository to another
GitHub repository.


--------------------------------------------------------------------------------
4. What is the benefit of having a copy of the last known state of the remote
stored locally?

It's nice to have a copy of the last known state of the remote stored locally so
that you can review any differences between your remote and local repos whenever
you want. This allows you to see if and where the repos have diverged.


--------------------------------------------------------------------------------
5. How would you collaborate without using Git or GitHub? What would be easier,
and what would be harder?

Without Git and GitHub, collaborating would either have to happen in physical
proximity to all collaborating members or done by constantly sending entire
directories/files to each other (like via emails). It might be easier because
with emailing directories/files to each other, there aren't a lot of complicated
commands involved, but there are a lot of cons to this method. Firstly, if there
are multiple collaborators, it would be very difficult to keep track of
everyone's individual versions. Additionally, it's hard to version-control with
this method because you don't know which version is newer/older. Lastly, it
would be difficult to resolve conflicts if multiple people edit the same file
or line in one edit. To sum it up, Git/GitHub makes collaboration significantly
easier and a much smoother process.


--------------------------------------------------------------------------------
